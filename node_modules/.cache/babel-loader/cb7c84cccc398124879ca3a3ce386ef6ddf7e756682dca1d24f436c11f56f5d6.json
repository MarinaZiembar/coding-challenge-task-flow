{"ast":null,"code":"var _jsxFileName = \"/Users/creativedog/Documents/Proyectos/frontend-challenge/src/components/organisms/Menu/Menu.tsx\";\nimport styles from './Menu.module.css';\nimport logo from '../../../assets/logo.svg';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Menu = ({\n  menuItems,\n  activeItem\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.logoContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: styles.brandLogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.brandName,\n        children: \"TaskFlow.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.itemsContainer,\n      children: menuItems === null || menuItems === void 0 ? void 0 : menuItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: [styles.logoContainer, activeItem === item.id && styles.active].join(' '),\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: item.path,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.icon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["styles","logo","Link","jsxDEV","_jsxDEV","Menu","menuItems","activeItem","className","container","children","logoContainer","src","brandLogo","fileName","_jsxFileName","lineNumber","columnNumber","brandName","itemsContainer","map","item","id","active","join","to","path","icon","alt","label","_c","$RefreshReg$"],"sources":["/Users/creativedog/Documents/Proyectos/frontend-challenge/src/components/organisms/Menu/Menu.tsx"],"sourcesContent":["import styles from './Menu.module.css';\nimport logo from '../../../assets/logo.svg'\nimport { Link } from 'react-router-dom';\n\ntype MenuProps = { \n  activeItem: string, \n  menuItems:Array<object>,\n};\n\nconst Menu: React.FC<MenuProps> = ({menuItems, activeItem}) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.logoContainer}>\n        <img src={logo} className={styles.brandLogo}/>\n        <p className={styles.brandName}>TaskFlow.</p>\n      </div>\n      <ul className={styles.itemsContainer}>\n        {menuItems?.map((item) => (\n          <li\n            key={item.id} \n            className={[styles.logoContainer, activeItem === item.id && styles.active].join(' ')}\n          >\n            <Link to={item.path}>\n              <img src={item.icon} alt=\"\"/>\n              <p>{item.label}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Menu;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,IAAyB,GAAGA,CAAC;EAACC,SAAS;EAAEC;AAAU,CAAC,KAAK;EAC7D,oBACEH,OAAA;IAAKI,SAAS,EAAER,MAAM,CAACS,SAAU;IAAAC,QAAA,gBAC/BN,OAAA;MAAKI,SAAS,EAAER,MAAM,CAACW,aAAc;MAAAD,QAAA,gBACnCN,OAAA;QAAKQ,GAAG,EAAEX,IAAK;QAACO,SAAS,EAAER,MAAM,CAACa;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC9Cb,OAAA;QAAGI,SAAS,EAAER,MAAM,CAACkB,SAAU;QAAAR,QAAA,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACNb,OAAA;MAAII,SAAS,EAAER,MAAM,CAACmB,cAAe;MAAAT,QAAA,EAClCJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEc,GAAG,CAAEC,IAAI,iBACnBjB,OAAA;QAEEI,SAAS,EAAE,CAACR,MAAM,CAACW,aAAa,EAAEJ,UAAU,KAAKc,IAAI,CAACC,EAAE,IAAItB,MAAM,CAACuB,MAAM,CAAC,CAACC,IAAI,CAAC,GAAG,CAAE;QAAAd,QAAA,eAErFN,OAAA,CAACF,IAAI;UAACuB,EAAE,EAAEJ,IAAI,CAACK,IAAK;UAAAhB,QAAA,gBAClBN,OAAA;YAAKQ,GAAG,EAAES,IAAI,CAACM,IAAK;YAACC,GAAG,EAAC;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC7Bb,OAAA;YAAAM,QAAA,EAAIW,IAAI,CAACQ;UAAK;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf;MAAC,GANFI,IAAI,CAACC,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAAa,EAAA,GAtBKzB,IAAyB;AAwB/B,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}